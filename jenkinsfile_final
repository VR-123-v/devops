pipeline {
    agent any

    tools {
        maven 'maven3'
    }

    environment {
        GIT_REPO_NAME   = "devops"
        GIT_USER_NAME   = "VR-123-v"
        DOCKER_IMAGE    = "udemy03/devops123"
        SONAR_URL       = "http://54.86.79.102:9000"
        SONAR_TOKEN     = "squ_377b3d687fdc09734fc24fec1bad2b130662bc12"
    }

    stages {

        stage('Checkout') {
            steps {
                echo 'Cloning GitHub Repository'
                git branch: 'main', url: "https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git"
            }
        }

        stage('SonarQube Scan') {
            steps {
                echo 'Running SonarQube Scan'
                sh """
                    mvn sonar:sonar \
                        -Dsonar.host.url=${SONAR_URL} \
                        -Dsonar.login=${SONAR_TOKEN}
                """
            }
        }

        stage('Build Artifact') {
            steps {
                echo 'Building Maven Artifact (.war)'
                sh 'mvn clean package'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker Image'
                sh "docker build -t ${DOCKER_IMAGE}:${BUILD_NUMBER} ."
            }
        }

        stage('Push Docker Image') {
            steps {
                echo 'Logging in to Docker Hub and pushing image'
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh 'docker login -u $DOCKER_USER -p $DOCKER_PASS'
                    }
                    sh "docker push ${DOCKER_IMAGE}:${BUILD_NUMBER}"
                }
            }
        }

        stage('Update Deployment YAML') {
            steps {
                echo 'Updating Kubernetes Deployment YAML with new image tag'
                withCredentials([string(credentialsId: 'githubtoken', variable: 'GITHUB_TOKEN')]) {
                    sh """
                        git config user.email "gorekarmadhu@gmail.com"
                        git config user.name "${GIT_USER_NAME}"
                        sed -i 's|${DOCKER_IMAGE}:.*|${DOCKER_IMAGE}:${BUILD_NUMBER}|g' deploymentfiles/deployment.yml
                        git add deploymentfiles/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    """
                }
            }
        }
    }
}
